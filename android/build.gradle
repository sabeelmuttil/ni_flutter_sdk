group = "ae.network.ni_flutter_sdk"
version = "1.0-SNAPSHOT"
// 
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

buildscript {
    ext.kotlin_version = '1.9.0'
    ext.kotlin_coroutines_version = '1.5.2'
    ext.androidx_appcompat = '1.6.1'
    ext.android_material = '1.9.0'
    ext.androidx_preference = '1.2.1'
    ext.androidx_constraintlayout = '2.1.4'
    ext.junit = '4.13.2'

    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }

    dependencies {
        classpath("com.android.tools.build:gradle:8.1.0")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
}

ext {
    supportLibraryVersion = "28.0.0"
}

android {
    namespace = "ae.network.ni_flutter_sdk"

    compileSdk = 34

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    defaultConfig {
        minSdk = 21
    }

    dependencies {
        def composeBom = platform('androidx.compose:compose-bom:2025.01.00')
        implementation(composeBom)
        androidTestImplementation(composeBom)

        implementation fileTree(include: ['*.jar'], dir: 'libs')
        implementation "androidx.core:core-ktx:1.10.1"
         implementation "com.google.code.gson:gson:2.10.1"

        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.0"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
        api files('libs/samsungpay_2.18.00.jar')

        // Compose
        implementation("androidx.activity:activity-compose:1.7.2")
        implementation "androidx.compose.runtime:runtime:1.7.0"
        implementation "androidx.compose.ui:ui:1.7.0"
        implementation "androidx.compose.foundation:foundation:1.7.0"
        implementation "androidx.compose.foundation:foundation-layout:1.7.0"
        implementation "androidx.compose.material:material:1.7.0"
        implementation "androidx.compose.ui:ui-tooling-preview:1.7.0"
        implementation "androidx.lifecycle:lifecycle-viewmodel-compose:1.7.0"
        implementation "androidx.compose.material:material-icons-extended:1.5.3"

        debugImplementation "androidx.compose.ui:ui-tooling:1.7.0"

        implementation "androidx.appcompat:appcompat:$androidx_appcompat"
        implementation "com.google.android.material:material:$android_material"
        implementation "androidx.constraintlayout:constraintlayout:$androidx_constraintlayout"
        implementation 'com.google.android.gms:play-services-wallet:19.4.0'
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.8.1'

        testImplementation "junit:junit:$junit"
        testImplementation 'org.mockito.kotlin:mockito-kotlin:4.0.0'
        testImplementation 'org.robolectric:robolectric:4.12.1'
        testImplementation 'org.hamcrest:hamcrest-library:1.3'
        testImplementation 'com.flextrade.jfixture:jfixture:2.7.2'
        testImplementation 'pl.pragmatists:JUnitParams:1.1.1'
        testImplementation 'androidx.arch.core:core-testing:2.2.0'
        testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlin_coroutines_version"
        testImplementation "io.mockk:mockk:1.13.7"

        testImplementation("org.jetbrains.kotlin:kotlin-test")
        testImplementation("org.mockito:mockito-core:5.0.0")
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}



tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        languageVersion = "1.9"
        jvmTarget = "17" // Or higher, depending on your project
    }
}
